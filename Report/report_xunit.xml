<?xml version="1.0" encoding="UTF-8"?><testsuite name="suite_demo" tests="2" errors="0" failures="1" skip="0"><testcase classname="TestSuite.Suite_Demo.MyTestCase.TestCase" name="testSomeThing" time="0.033"><failure type="builtins.AssertionError" message="False is not true&#10;    'False is not true' = self._formatMessage('False is not true', &quot;%s is not true&quot; % safe_repr(False))&#10;&gt;&gt;  raise self.failureException('False is not true')&#10;    "><![CDATA[  File "C:\Users\dnnvu\AppData\Local\Programs\Python\Python35-32\lib\unittest\case.py", line 58, in testPartExecutor
    yield
  File "C:\Users\dnnvu\AppData\Local\Programs\Python\Python35-32\lib\unittest\case.py", line 600, in run
    testMethod()
  File "D:\AutomationTX\BaseFactor\CommonLib.py", line 37, in _testRetryWrapper
    testMethod()
  File "D:\AutomationTX\TestSuite\Suite_Demo\MyTestCase.py", line 14, in testSomeThing
    sefl.assertTrue(False)
  File "C:\Users\dnnvu\AppData\Local\Programs\Python\Python35-32\lib\unittest\case.py", line 677, in assertTrue
    raise self.failureException(msg)
False is not true
    'False is not true' = self._formatMessage('False is not true', "%s is not true" % safe_repr(False))
>>  raise self.failureException('False is not true')
    ]]></failure><system-out><![CDATA[




Setup
Teardown

]]></system-out></testcase><testcase classname="TestSuite.Suite_Demo.MyTestCase.TestCase" name="_testRetryWrapper" time="0.000"><system-out><![CDATA[Setup
My testSomeTime
Teardown

]]></system-out></testcase></testsuite>